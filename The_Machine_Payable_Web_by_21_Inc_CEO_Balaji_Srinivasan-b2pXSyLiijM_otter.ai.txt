Unknown Speaker  0:16  
Hi, everybody, thanks for coming. Special shout out to boost VC for hosting this event. The space is amazing. Balaji is planning? Well, first of all, let me introduce Balaji Srinivasan co 21. Thanks for coming out there, like round of applause, Mary.

Unknown Speaker  0:37  
Yeah, thanks, again boosts. Balaji is going to go through a presentation. And then we're gonna do a kind of quick q&a between him and I, and then some questions from the audience. And that'll be it. Thanks again.

Unknown Speaker  0:53  
Cool. All right. How's that? working? Okay, good, good, good. Okay, so I've got a quick start over here for people who like just want to just start programming, but so you can just install our software like this, get an account over here, and then read the documentation there. I know, there'll be people who complain about piping into the shell. But if you know enough to know that that's bad, you can pipe it to less. And frankly, it's basically the same as installing any software. But okay, so let me um, this is a super quick start, I want to give a little bit of a reprise of kind of what we've done technologically, and some of our motivation and some of the apps that you can build. And we'll be offering thousand dollar bounties for those apps. So if you want to get on those, then, you know, might be fun. So basically, I'm going to talk today about this concept called a machine payable web. We posted a blog post on it. Last week, I gave the big chunk of this talk at coin desk consensus. Who here is familiar with kind of the machine pail web concepts? Just raise your hand? Okay, so about half the audience. So I'll go through this relatively quickly. And just to get everybody level set, and then we can go through the fireside chat, and I'll stay for a while to answer questions. And so um, so the basic concept behind this thing we call the machine pill web is it's a way to essentially earn Bitcoin and every HTTP request to actually have servers that consume Bitcoin and then return a result, whether it's data or something else. And oh, here's, here's my bio for it's worth. So, you know, Patrick already introduced me, but I'm a partner at Andreessen Horowitz, founder of 21. Before that, I founded a company called Council which Peter teal and foundation funded Prisma 100 million for that, should should go public sometime. And finally, I taught computer science and stats at Stanford, she's gonna be a Bitcoin MOOC also coming out soon. So you can sign up for that at Bitcoin dot stanford. edu, great domain name. We squatted all those years ago. So awesome. So Alright, so let me motivate kind of what we're talking about. We think of this, as in the machine pill, the web is potentially a third web. I know that sounds, you know, maybe important, but let me try to motivate that. So you know, first we had the World Wide Web, right, we had a web of documents, and the links between nodes were hyperlinks, right? And then we had the social web, the social web, you've got, you know, individuals, as the nodes. And links between nodes are your friend relationships or their likes, their posts, their tweets, their you know, all the stuff that we know and love, right. And we think that there's going to be a third web on a web of machines, where the links between nodes are payments between machines. And this is something which you know, really has only become possible with digital currency, because digital currency machine can be said to actually possess money. Because the presence of a private key for a bitcoin wallet or an aetherium wallet on that machine is like, like a bearer instrument, it's like cash, right? As opposed to say, an API key for a PayPal account that can be shut off distilled to the machine a bearer instrument can be. So this is this concept machine, Bill Webb, this good network of machines, which are paying each other Bitcoin, or a digital currency more generally. And the question though, is why right. Why would we want a machine payload? Why would that be interesting? And one answer is because paywalls are actually much worse than than you might think. I'm just to recapitulate the idea of a paywall. You know, this is one of the two major ways we pay for what I call human consume content. Right? So what is human consume content? like a like a web page, where you're just viewing news, right? And so let's say you want news on interest rates, right? There's two ways that you pay for that right now are two major ways. The first way is, you go the Wall Street Journal, you look for an article in interest rates on and you get a paywall. Okay. And this is something where you have to sign up and there's, you know, some friction to that, right? conversely, you can go to Google, you can search for interest rates, and you see a bunch of ads and then your information is below, right. So there's no signup, it's lower friction. And once in a while you will get distracted, you'll click on these ads and Google will make some money. Right? Okay. So this works if the consumer of this is a human that is you're reading the content Human is the consumer, right? But if a machine is the consumer, like is the case for an API, there, there's only one choice. There's only a paywall. So if you go to Amazon Web Services, or you go to Twilio, or you go to any major API, you have to go through the signup process. And in fact, you take that for granted, right? You go and get your access key, you get your secret key and so on, you create an AWS account, there's no equivalent where your machine can just go and effectively give a micro payment to Amazon without a signup process for accessing API. And there's a sort of a fundamental reason for that.

Unknown Speaker  5:34  
But, but let's kind of look at why why that's bad. Basically, if you think about what the web would be, like, if every single time you clicked a link, you hit a paywall, um, you'd realize you just click a lot fewer links, right? If you just visualize every single time you click a link, there's a new signup page. Well, what that means is the web would be more like television, right? where you'd have just a few channels, that you would amortize the cost of a sign up, and everything would aggregate behind them, rather than the long tail of links, which are in your history that you click every day, right? It just be a totally different experience, because the fixed cost of basically signing up each new website. So this is, you know, this dystopian possibility. And this is what we have. But with API is it's actually, you know, dystopian, like we have that that's our dystopian, not possibility. But reality, where every API requires its own signup. And you've got your Amazon API and your Twilio API, and you've got your, you know, clearbit API and this API and that API, but what they can't, what they can, what you can easily do is do find green calls between them. There's nothing like that's equivalent of a link nothing that's like a really lightweight way to call out to an API without full signup process with API keys. Or, I mean, obviously, you can use a free API. But that's not a sustainable thing. That's actually why Twitter for example, you know, eventually deprecated a lot of its API features because he was serving 15 billion API calls a day, but it wasn't making any money. Right. So the the workarounds for this are either you give away for free, and then you try and subsidize in other ways. Or you put up a paywall, and then you're losing, you know, a lot of customers, right. So, um, the reason that, you know, the ad model works for humans human consume content, is that, you know, you have the option of a paywall over here, where some fraction of the time people when they're getting content they pay, and most people bail. Or you can have, you know, 100% of people paying 1% of time with their attention. That doesn't work, though, for a machine consume content. Because, you know, while you can set up a paywall and the signup process, so a machine can consume an API, um, machine will never get distracted by an ad. Right? So this over here is like the fundamental reason why the ad model doesn't work for Amazon Web Services. write the script that you write, when you load in the API keys is always just going to go unerringly towards its target, it's never going to get distracted one or one out of 100 or one of 1000 times and click on an app, right? So you need a fundamentally new monetization model. If you want to have fine grained remote API calls, right? You're going to need something where a machine can make a micro payment to another machine. And so for machine where we needed machine currency, and you know, that's why I put this up there, we need Bitcoin, or something very much like it right now, when I gave this talk is that the, you know, consensus conference where a lot of guys were talking about blockchain and whatnot. And you know, for Bitcoin here, you can really substitute a decentralized digital currency, it just needs to be something where you know, there is a, there's, there's a bearer instrument that you can actually have on a machine, right? And over time, we may actually support other digital currencies. But right now, Bitcoin has the best infrastructure. So we are, we're definitely supporting that. So that's why we built 21, basically, to turn on Bitcoin digital currency into this currency of a machine payable web, where machines can pay other machines back and forth autonomously and do that much faster than any human could write. Once you can do this, there's interesting second, and third order effects that happen, machines can set of prices, machines can automatically choose between the best prices, all that intelligent agent, stuff that people want in the late 90s, is actually possible. To be a little more precise. What is the 21 software? Do? It basically does three things, right? First, it's a quick way to get Bitcoin in any device. And we've got a variety of methods to support that. Second, it's a way to add Bitcoin to any app. So you can put one line of code in in any Python app, which either flask or Django will have other ones coming soon, that support micropayments in this fashion, right, so 5000 satoshis per invocation of this function. And the third thing twentyone does is allows you to earn Bitcoin in every HTTP request. And the way this happens is, you take this machine payable app that you just built over here, you plug it into our machine marketplace, now other people can discover it, and buy and sell into that endpoint. Let's go through these things in order and then you know, give a little bit of philosophy of why we're doing this and take some questions. So first, what is it what do we mean by get the konenny device so I think Tron is probably the fastest way to get started the Bitcoin without a bank account or credit card, right? And the reason for that is, so first, you can just easily you know, install 21 like this, right? And so, you And they'll, you know, give you some feedback. And you can, you can see that it's actually installed, they'll work on a Mac, they'll work on most Linux distributions. If there's one that you haven't seen, you know, let us know, we've also got a Docker image. So you can probably run this in a VM on Windows, and we'll have native windows support coming soon.

Unknown Speaker  10:18  
But so this is where you install it. And once you've installed it, we've got five different ways that you can get Bitcoin, right. So the first way is, you know, if you've got a Bitcoin computer to another computer, you can rent one mine and you will mine some Bitcoin, okay? The The second way that you can get Bitcoin is if you do have a credit card or bank account, you can go and integrate your Coinbase account, and you can just buy bitcoin and all this stuff can be done not just at the command line, but programmatically would like like an import call. Okay. Um, the third way you can get it is if you have a social network account, and you set it to 21, you don't need a bank account, you don't need a credit card, just use a social network Account to rate limit it so that you know that there's an abuse, but you can just request Bitcoin from our faucet, right. And this is fun, because you can just do this on any machine, get a little bit, just start messing around that, you know, runs to your first Bitcoin, PayPal API's. But the the fourth and the fifth are, in some ways, kind of the most novel. So the fourth way to get Bitcoin in device is by using tournament earn. So this command is in early access now, so just email us at support 20. Co, if you want to show an access. But basically what this is, is microtasks micro jobs, right. So in this example, you were inviting people, and you know, we are basically paying out, if those emails are institutional emails, we don't pay for Gmail emails, and we don't pay for invalid ones or for guys who are already in the database. But if you give an institutional email, and it's not in our database, and the person hasn't set up an account yet, that's valuable to us just did some work. Okay, we'll give you some money. Right? Now, that's actually you know, a small thing. But it's a kind of a big thing in the sense that, it's never been possible to have an instant job on the internet before. There's companies that will give you coupons for inviting people like, you know, an Uber will give you discounts if you get people to sign up for it. But giving out cash on the internet, digital cash hasn't really been possible, write lots and lots of websites will take your credit card, and you can pay them, but very few websites will pay you. Right, it's actually there's a non trivial barrier to doing that, especially small amounts of money for just clicking on things. And so this is really the foundation of something where in five years, 10 years, just like you can go to a forum and instantly join a community, you can go to a page and just start clicking a lever, pulling a lever, and it's an instant job, you're doing work and getting money, right? This is the foundation of that, right? The fifth way to get Bitcoin is by basically running this command 21 sell. So well earn was basically putting in labor, like pulling a lever or clicking a button and getting some money. This is really putting in capital putting capital to work in the sense of your machine, right. So while you're probably asleep, your machine services requests over here for Bitcoin runs, for example, in this case of pink service, and services, say 14 requests over, you know, two hours for 87 cents right now might not seem like a lot. But if you're you know, sleeping in your machine is making you like 50 cents or $1 a day, that is actually an enormous amount by internet monetization standards. Basically, you know, just just to put this in perspective, Facebook makes about $1 a year, you know, but for a person, rather $1 a month per person in developing world, about $10 a month for somebody in the in the developed world. And so if you're talking about like $1 a day, that's like a huge amount of money. For internet monetization, it basically make you a super valuable subject. And this can be done just by sleeping and living your machine service requests on your behalf. Now, importantly, these three methods, the faucet earned in the cell don't require, you know, any hardware, they don't require any bank account, they don't require any credit card. So the kinds of things that in the relatively near future, you can build into phones, you can build into Linux distributions, you can build into applications of different kinds to allow people to make money passively, just over the internet. Right? Um, okay, so that's, that's one, let's get back on any device. All right. So the second thing that Tryon lets you do is it lets you add Bitcoin to any app. Right. And you know, by this, what I mean is, you can take any, you know, in this case, flask app or Django app, and we'll have more soon. Here's just a standard vanilla flask app. It's like a Hello World. Hello, Bitcoin, right? You go to front slash Hello. And you get this message back, right.

Unknown Speaker  14:21  
And now we added micro payments, right? So after the import step over here, we just have one line over here that says every time you go to this page, or go to this URL, rather, you're paying 5000 satoshis for you to access it right now. 5000 satoshis, okay, that's cool. It's a constant. What gets much more interesting is if you pass in a function, okay, so now you pass in a function which takes an HTTP request, and returns an arbitrary dynamic price. Now, that's actually like, you know, pretty pretty big deal, right? Because there's several things you can do that right. So first is if you want to you can make the price oscillate, you know, with the time of day, right? You can give a lower price if the person is authenticated as your friend or friends and families discount, right, you can give a higher price. If you've got a bunch of different machines that are all hitting you at the same time, you can give surge pricing for API's, okay? You can also do even more sophisticated things where you're pulling other providers, let's say you've got an English or Chinese translation service, and you've got five competitors, you can actually go and pull their prices, and then make sure that yours is always lower, right? And do interesting kinds of things like that. So once you actually talk about a machine economy, all of this machine decision making now becomes possible. And like dynamic prices are an enormous part of that, right? I think of, you know, dynamic pricing, you know, this is this will be probably as important as like dynamic web pages, right, we don't even realize how big a deal this is going to be. So Alright, so then the third big part of this is earning Bitcoin and every HTTP request, right. So we think this is kind of a new way to monetize online. So once you've got some idea for, you know, some kind of machine payable application, we've got a centralized marketplace, you can submit this to so others can discover from it, you can run the software on your own, but if you put in the marketplace, and others can find it. And there's a lot of other interesting features, like, you know, we have request and response filtering, stuff like that. And o one very important thing actually is, if you list your app in the marketplace, then somebody can show up in a payment channel of 21, and buy any other app in the marketplace. And that's actually one of the ways that in the medium to long term, you've reduced traffic on the blockchain, and yet still support Bitcoin micro payments, right? She said at one deposit, and you have KPIs that you can call, so you can publish your app to the marketplace. And you can also set up a profile over here. And, you know, so here's Satoshi he's got $2 and 10 cents, and has basically got a bunch of different apps where he's making money, right. And so I think this is kind of cool. You know, it's early days. But we think of this as sort of like the first social network where, you know, you're not making friends or you know, adding followers but making money. Right, so like the first capitalist network. And we've got, you know, a community over here with actually more than 2000. Members. So you can, you know, jump in and get your questions answered. And we have reasonably fast response on that, if you jump in, it's a nice group of guys. So in summary, that's the three things that 21 does. It, basically, it allows you to build this machine payload web, this third web. And the three things it does allows you to get back on any device, ad containing app, and earn Bitcoin and every HTTP request.

Unknown Speaker  17:29  
Now, so you can get started to code. And, you know, I can take some questions, or I can just talk about the appendix sections, which Patrick asked me to talk about. So Patrick, should jump in the appendix? All right. Okay, good. All right. So I've got two supplements here, right. And the first supplement is basically just how do we think about this in a more macro context. So we really think like, you know, what 21 is, and what we, you know, hope it will be, especially over the next few years is a way for developers to make passive income, and a piece of the vision in this really great book on that's actually like, TEALS favorite book, it's, it's one of Anderson's favorite books, one of my favorite books, called sovereign individual, right. And there's actually a whole bunch of books that are like this, seeing like a state and so on that I think of it sort of like a foundational library, it's part of like, you know, 20 111, we'll hand these out of the front door, you know, to new recruits. But let me talk about this book a little bit, because I think it's important. So, you know, back in the 90s, late 90s, there are a lot of things that people, you know, started the flash of whiteness, you know, a lot of things that that people talked about, right? So they talked about digital cash, and they talked about micro payments. And they talked about grid computing. And they talked about intelligent agents on and you know, all of these kinds of things are now made possible once you have something like Bitcoin. And you know, I think our software also helps with that, right? This is a tutorial you can see on our website, if you go to twitch co forward slash learn, you can actually build an intelligent agent that will look for the lowest, you know, price, right. And so this, basically, once you've gotten Bitcoin as the system resource, a lot of these things that people talked about become possible. In particular, one thing that becomes much easier than it was before his ability to make passive income. So you can sit on the beach, and you can have your machines making money for you. Or you set it up, right. And you know, you just have your API service things or you sit on the beach and you turn your lever, you pull your lever and you're doing your Mechanical Turk, like things except it's a higher price Mechanical Turk. Maybe you're a doctor and you're diagnosing somebody next, and you get another Bitcoin payment, right? Anything that's information work, you can now start to unmoored from location and allow people to just just make money from anywhere. That's really a big part of this book called the sovereign individual, which I like a lot. I'm in entirely new realm of the whole book is actually worth reading. And what I love about it is many books, you can take the entire book and compact it down to a paragraph. Whereas this is the reverse. You can take a paragraph or even a sentence in this book and really expand it into like a full book or a full pitch deck and what's cool about it was written in 1999. And it actually foresees a lot of the stuff that's happened over the last 16 years. And what's interesting is about like, half the stuff has come true already, and half that are like just really good business ideas that you could go take and run with. And, you know, develop, I would not be surprised if Satoshi read this book and develop Bitcoin, at least in part on what's described in here, right.

Unknown Speaker  20:22  
But there's one aspect of this in particular that I think is relevant, which is, you know, an entirely new realm of economic activity, there's not hostage to physical violence will emerge in cyberspace, in the most obvious benefits will flow to the folks who are operating outside political boundaries, incomes will become more unequal within jurisdictions, and more equal between them in the sense that everybody in the world gets an equal shot. And so when that happens, all these people, the billion people in China and India, the 300 400 million people in Eastern Europe, Russia, in South America, and the Middle East, all these people who are kind of outside the world economy for now, coming online, and they'll they're going to be competitive. So, you know, all these folks, you know, are, you're gonna have this thing where to be in the global middle class, you have to be at or above the global 50th percentile, right. And so the good thing about that is you've got global markets, The bad thing is you've got global competition. And we think that, you know, when you've got a global digital currency, and it's just easy to trade on the internet, just directly back and forth for Bitcoin without any intermediaries, that's gonna be a big part of sort of bringing this vision about. Now, um, you know, one thing that sort of relate to this, if you actually go back and look at the very, very beginning of Bitcoin, you know, Bitcoin was actually built for a financial crash, right? You go the very first block, and, you know, Satoshi talks about, you know, the, the chancellor, and how, you know, there's another bailout in the UK, right? So timing is very hard to predict. And just like people have predicted, you know, a.com bubble for the last like, eight years, nine years, people predict a financial crisis, you know, 2.0 for almost or not that time, right. But suppose that that does happen. Right? Then your interesting question is, what happens next, right? So if we go back, and we look at the crash of 2008, on what actually happened was that pre existing trends gain new energy, right, so stuff that had already been around became more important. So you know, the trial of 2008 when this financial crisis happened, stuff, which existed like Y Combinator, like angel investing, like social media, it went from a growing niche that people in technology knew about to really the mainstream technology today. And everybody thinks that Oh, the way you're supposed to start is to go to an incubator, right? And that was definitely not mainstream 10 years ago, right? That was very niche. But it just gradually became this really big thing, especially after 2008. Because people said, All right, there's not much money, what can I do with not much money, right? So capital costs went down, and those the excuse to really go incubator style and start doing things for like, 100. k? I do think that the next crash is different, because you're going to have issues with government legitimacy. And I think that Bitcoin is going to become a big part of what comes out of the next crash if and when it happens, right? So in the thought experiment, that there actually is a crash or 2016. It's not a thought experiment in China, because they've actually already had this right. In that thought experiment, what comes out of it? I think it's some combination of bootstrapping, hacker houses, digital nomadism, digital currency, and the developers of the developing world, right? And why do I need these trends? In particular, because hacker houses where you have a bunch of folks living together pretty common in San Francisco, pretty common in this area, because of high prices, digital nomadism combines with these because you're fine, your hacker houses online, you move there. And all these folks, everybody's got a startup idea, everybody's got a pitcher, but he's got something they want to build. And you start, you know, basically just saving money by moving to low cost locations. And these things mixed together, where digital currency is really at the core of it, where you're just trying to make money from anywhere, right. Crucially, these things all exist, right? Like folks have talked about this stuff, just like yc existed before the crash is just like social media existed before the crash 2008 these are pre existing trends are not just going to come out of nowhere. But I think they're going to be amplified if and when a crash does occur. Because these are things that reduce capital costs even further from $100,000 in seed capital to zero to the ability to just bootstrap to come up from nothing, right? So you know, C doesn't go away, VC doesn't go away, they just move up the ecosystem. And a new question is, what can you do at zero? Right? What can you do if you're just a kid with an Android phone and internet connection, and maybe maybe a little keyboard anywhere, right. And so, you know, this is the kind of thing I think about a lot, which is sort of, you know, taking a step back from where the ecosystem is today and seeing where it could be in you know, a couple of years. Now, we're not solving every piece of that. But we are tackling that digital currency piece and making it easier for smart people anywhere to make money. Okay, so um, now I'll give appendix two. So basically, applications that you can build with a 21 I know jumping over a bunch of different things, throwing them fast, I'll send out the slide deck to the to the Slack channel. Alright, so pretty big bright flashes coming right. Okay. Yeah. shades shades on? Yep. So, in terms of the three class of applications that you can build a 21. Right. There's, there's one key distinction, right, which is what we call the Cloud and the grid, right? So the cloud is like Amazon, where there's unidirectional payment, and you're renting servers over here. Okay? The grid, by contrast, is bi directional, where computers aren't just renting compute from others, they're also renting out their own compute, right? So you're not just buying from the grid, you're selling into the grid, okay.

Unknown Speaker  25:21  
And so this is a bidirectional flow, the payment is on demand, right? It's not like on a monthly basis paying Amazon, right. And the nodes are all located around the world. They're not locked up in a single data center. So there's a different value proposition here. Now, importantly, by the way, these nodes are much flakier than the servers that are in an Amazon data center, because you're on residential internet connections, right? So you might have one 100, you know, the, like, from 99.9% uptime to like 90% or 99%. uptime, or what have you, right, so the uptime is going to be much worse here. But there's a lot of other advantages these things have, which is they're actually out in the physical world, because they're on the physical world, you can actually sense an actually on the physical world for money in a way that you never could with cloud services, right? So the grid is like a fundamentally different thing from the cloud. And on, you know, the distinctive property is the fact that it's in the real world you can sense and act upon are things which we think drive some of the applications here. So I will skip over a quick history of the of the grid, but the main thing is that by putting 21 on any machine, you can, like join the grid, right? You can buy and sell into it, our marketplace facilitates this, but you can also directly connect to each other and rent paid services. I'll skip a little bit about or the history, but let me talk about different kinds of applications just as motivation, right? If anybody does any of these, in a good way, you know, we'll give like $1,000 bounty and Bitcoin just like as a fun kind of thing. Okay. We'll post it More formally, but but you guys seem like the kind of folks who'd be interested. So examples of grid computing tools, right? So you are grid buyer. Okay, what kinds of things would people sell into the grid? Right? So one example we've already released is something we call a pink 21. Where, if you want to monitor the uptime of your website, for many computers around the world, you can now go and pay them a little slice of Bitcoin, and they can ping your website, right? And that's actually like a recurring thing. Because if you care about your uptime in, you know, India and Brazil, and and, you know, South Africa, and you know, so on, will you care about your uptime, not just once, but over time, right? Sure, currency paying little slice of Bitcoin for these machines to come and ping you and give you your uptime, those different countries or different locations, or later one is something we called trace route 21, we've, I think, released some of the code for this. And this is something if you're Cisco, if you're in Sierra, right, you want to know from a residential connection, exactly how packets are being routed on. So if you're debugging hardware of various kinds are trying to debug exactly how packets are flowing off. And there's some DNS issue or something like that, where this could be handy.

Unknown Speaker  27:55  
Example three, and four are related to benchmarking, okay. So if you go and take, you know, a bunch of Amazon machines and have them go and try to stress test your website, you're getting a very different result than if you rent 5000 different computers around the world and have them stress test your website, right, they're just going to be qualitatively different. They Amazon machines, for example, run into any cache based on an IP range of they're gonna have a much better internet connection, they're gonna have different latency characteristics, all types of stuff are going to be different, right? And so it's going to be a test that's very different from your prod, you know, traffic. And so Jamie, you're 21 and a, b. 21, are based on the kind of Unix command line tools of the same name, J meter is based on Java ABS Apache Bench. And one of the things that, you know, we would do this now, in theory, someone asks, often, well, doesn't this mean that you can just do a DDoS of anybody, right? Can't just rent 5000 computers and appointment somebody and DDoS him on demand, right. So like, the way to mitigate that is, this is sort of where I'd like some of the marketplace features come in handy. In order to rent all those machines to the marketplace, we'd ask you to do a domain validation. So you show you have either an email address of the domain, or you know, DNS control, right, so this way, we know that you you can't just hit example.com unless you are john@example.com. Right. Um, other examples, so spidering, right. So now a little known fact is, it's actually very hard for Google to build something like Google today, because robots. txt is everywhere. And it's very hard to spot a spider, most websites, and many websites have only an exemption for Google and not for anybody else. On this, it's very hard to get that kind of content down. Now, there are services that will do spidering for you. But it is non trivial to do if you try to do it from an Amazon IP, you'll just find that that's blocked, right? They just don't allow spidering to actually build a search engine spidering is kind of a first class problem. And guess what? You can you know, it's very cheap printer machine, boom, just send it off to spider and get you back the content. Right. Another example is if you're in China, right, you can set up a proxy server and just run that for Bitcoin. Okay. Here's another example. If you're developing something like a Skype, any kind of voice application, now you rent two nodes, like a node in Brazil and a node in India Okay, and now you can have them set up a voice channel to each other. And you can see the actual quality of service metrics on real users, right. And they're being compensated for that activity, right. So lots of stuff like this, or when we think of it sort of grid computing tools, where once you can actually rent computers on the grid, their value is in the fact that they're not in a data center. Because let's say, again, you're testing that Skype example. If you took a data center, you know, server in the East Coast and one of the West Coast and you had them set a void connection, everything is going to work, it's all going to be fine, right? Because you just got this extremely high bandwidth connection, where you want to actually try it on real computers, real machines on rather than kind of your test setting. Right? Okay. So this is a classic, like grid computing tools, where you have like a Bitcoin payable API in front of other machines. And it's kind of symmetric, right? There's two other classes.

Unknown Speaker  30:47  
The first are cloud computing tools, right? where you're going and wrapping things like Google Maps, or a Bing search or file conversion or what have you. And over here, you're sending Bitcoin up. But on the back end, you basically are just using standard API keys, right? Now, why would you do this? Well, it just makes everything Bitcoin payable composable. It's like a function, you can just do f of g of h of x. And once you've wrapped the API once the labors amortized across everybody else, right, so examples of this, this a relatively risky one, but like server side compilation, right, send up a file, you have to really trust the server to send you back a binary that works. But if you do, that could, you know, save you a lot of time, lots of big companies run compile farms, simply because, you know, local compilation is an expensive process, google translate google maps, file conversion search, you know, shape shift, like all coin, you know, transformation, or literally just putting any database up. And paying on a per query basis, are the kinds of things that you can do when you talk about like wrapping cloud services, you know, with Bitcoin, and all these things are pretty easy to do with the 21, you know, tools just put a payment required in front of the web service. The third and final class of applications you can build are we think of as a cloud computing tools. And this is sort of like Mechanical Turk type stuff, right? We're now on the back end, you don't have a cloud service, you don't have a machine service, you have human services of different kinds, right. So for example, you can pay people to SMS them. And we've got this demo on the website, where rather than giving out your phone number, instead, you give out a URL that people can pay you. And then you get an SMS to your phone, right. So now your time is valuable, and you can kind of rent that out, right? Or you can pay people to go and label training data. A little known fact is that the critical prerequisite for all deep learning, machine learning all AI is training data, and it's in short supply. And if you can just pay people directly for that, well, you can get a lot of labels. Now there's ways to do this already with like Mechanical Turk. There's ways to do this, like Google training, you know, like a reCAPTCHA stuff that you'll see on your logins. But this isn't like a systematic way that you can, you know, fan out and do it. So this gives you a sense of the kinds of applications that you can develop a 21 on the grid, the cloud in the crowd. And I know I've covered a lot of ground here. And you know, some of you guys, you know, this old hat, some of you guys, it's all new, we'll paste this slide deck in our Slack channel, so you can all get it and Patrick will send around. But let me let me stop there. And let me just take some questions. Let me make this last break. Okay, great.

Unknown Speaker  33:22  
Well, it's fresh in their mind that we can use fireside Yeah, sure.

Unknown Speaker  33:29  
I guess.

Unknown Speaker  33:37  
Can you? Can you hit the microphone? Sorry, I can hear I can hurt reputation. But, sir. Um, how our reputation metrics smashed for notes, like the quality of their service or uptime? Yeah, responsiveness. Good question. Yeah. So we actually we we do measure, we have a crawler that hits every endpoint that's listed in the marketplace. And we collect uptime. And we also have buyer and seller star ratings. But we're open to any other types of stuff on that we think about that a lot. We also if you have low uptime will push you down in the rankings a

Unknown Speaker  34:19  
great presentation. Thank you. Um, so for the off chain micro payments stuff, particularly stuff where it's going through 21. How does how does KYC AML regulations relate to that? You can't really KYC a computer, but there's a person behind it. So route is 21 to handle that.

Unknown Speaker  34:40  
Yeah. So So basically, there is. So I'm not sure how much I can talk about that. But I'll give it a little bit. So there is actually in it. So we've got an illegal opinion, which basically is that the fact that we're reselling these API's, and it's actually like a marketplace. There's actually an exemption under the MSP laws that allow marketplace activity. Right, we don't allow is any conversion of money. So you can't send in Fiat and get Bitcoin out. But as pure Bitcoin to Bitcoin we're reselling a Bitcoin PayPal API in a marketplace, there's actually an exemption under the MSP laws. So but that's MSP now for KYC and AML. We do not allow OFAC countries. And we don't allow anybody on the like, watch list, the stuff that's supposed to in, you know, country level filtering, so like Iran and North Korea and stuff like that, and also individual level. So if you sign up as a sama bin Laden, we won't be able to serve you.

Unknown Speaker  35:35  
I got a question regarding your company. And where is your status at some points, you said, that's happening in the near future. And that works right now. How many, like customers have you or transactions or just pick, pick and KPI and tell tell us more about that?

Unknown Speaker  35:54  
I, I don't wanna talk about KPIs right now. But

Unknown Speaker  35:57  
the surprising

Unknown Speaker  35:58  
how much money do you have? Right, like, you know, right. But I, you know, I do believe like, well, give us about a couple of months, and you'll see some big announcements, but we just open source this package. So, you know, like, try to have fun with that.

Unknown Speaker  36:23  
How did you first start to get interested in Bitcoin? And second car shouldn't be? What's your opinion on open Bazaar, and the future of the world wide web?

Unknown Speaker  36:34  
Okay, those are three big third ones a big question. So how did I get interested in Bitcoin on? So in my previous company, which is a genomics company, I encountered the American regulatory state firsthand. I don't know if anybody was following personal genomics in 2010. But the FDA and Congress basically like launched an investigation that essentially pushed everybody out of personal genomics rather than 23. And me. And that's why, like six years later, like the industry is growing very rapidly. And that's why now, six years later, most people don't have their genome sequences, like 19, companies were driven out of business. And that made me understand the regulatory state in a very different way than you know, as an academic, you know, career academic, I'd been up to up till age 28, the worst thing the government could do is not give you a grant. Right? So the worst thing that could do is not give you money. When you're on the other side of that, you realize that it's actually quite a different kettle of fish. And that sort of started my journey towards thinking about, okay, you know, what is a regulation it is a ban of a transaction between consenting individuals. Well guess what Bitcoin is, if it wins, we globally on banned transactions. Right. So, you know, that's our exit right? Now, the crucial thing is it folks actually like those regulations? Now, if you take a second order view, there's a slightly, you know, maybe arguably more mature view, which says, people want to regulate our marketplace, in the sense that they want some act or some Leviathan, which is a making sure that like, really poor sellers aren't in the marketplace, and be kicking out malicious actors, right, which are two different phenomena, right? The first is like a one star seller, and the second is a zero star seller, an actual crook, right? So they want a regulator where you know, you buy from Amazon, you don't want to be scammed, you don't want to get a low quality thing you want to Leviathan. But I think the big thing that society hasn't yet adapted to is recognition that, you know, like in the 20th century, the best way to build a Leviathan like that was a, you know, a paper based entity that corresponds to a nation state, right? So an FDA and EPA, something like that. But today are it's these cloud based things. So like eBay, and you know, PayPal, they all are Gmail, right? All these things are effectively regulators of marketplaces, right? PayPal has fraud protection on both ends. And eBay has seller and buyer ratings, and Gmail has spam filtering and whatnot. And so these huge online, effectively marketplaces are communities, we've figured out ways to do regulation that aren't quite as heavy handed. So I know that's a little bit of a digression. That's how I got into bitcoin because of regulation. And that's how I think about Bitcoin as a way to basically on ban transactions thereby cut through regulation. Now, your second question was on open bazaar. I love open Bazaar, it's great on, we're actually investors in it, have recommended them as a partner an injection in that meeting. And so thumbs up. And Brian is great. I think they're focused on a very different kind of use case, which is physical goods. And, you know, we're very much focused on like API's and digital stuff. Third question future the role of it's too big for me, so I'll leave that one. Yep.

Unknown Speaker  39:37  
Tamra and talking a little bit about the MOOC you guys have planned for Stanford, and maybe who the ideal audience for that is?

Unknown Speaker  39:43  
Yeah, sure. So So we've sort of been working on this for for a while, in pieces. Like I said, there's a MOOC that I taught all the way back in 2013. That had like several hundred thousand folks and and people seem to enjoy that on and it was a lot of work. And we've released a ton of documentation over the last year with Bitcoin payable API's, which you can see at twitch co slash learn. And a lot of that stuff is also@bitcoin.stanford.edu. If you want to sign up for the MOOC, go to bitcoin.stanford.edu, and just put your name into that signup form on and it's coming, it'll definitely come out. They're just a matter of timing.

Unknown Speaker  40:23  
From a geographic perspective,

Unknown Speaker  40:25  
where are people building things for the 21 marketplace and using the 21? network? So we're in many different countries, I actually get a number of different countries. But obviously, we've got folks, you know, in the Bay Area, but we've got folks as far as Japan, India, Brazil, etc, all messing around with it. I think we're on every continent other than Antarctica. But, you know, that's, that's six continents. Right? So pretty distributed.

Unknown Speaker  40:55  
Hi, first of all, you have an owner of 21 computer, and I had some minor failures, but your support is amazing. So kudos for that.

Unknown Speaker  41:05  
And my question is, you know, how much the mining itself is important to you, right? You're selling the devices and against your, your big vision is perhaps there's a 21 tip, you know, MacBook or an iPhone, and so on. So is the 21 pool, the main business? Or is it like no, perhaps selling that into one software for marketplaces to other people? Good question. So I think that, um, so the marginal cost of installing our chip into devices is very low, right? But it's not zero. Whereas if you think about our software, it is actually zero marginal cost to put in a device effectively, right. And as such, you can almost think of what our software is doing, especially this thing, the the 21 cell. 21 cell is, in interesting way, almost like virtualized mining in the following sense, right? If you put a tournament chip in a device, it is effectively selling hashes up to the network and getting Bitcoin down. Right? It's it's providing, effectively a service up to the network that the rest of network values and you get Bitcoin down and return like a small stream, right. But the problems with that are that hardware, it can take time to update. It's basically like, you know, it's a very dumb piece of hardware. And it's like a machine minimum wage, right? If instead, you have the tournament software on there, and you're selling API calls up to the network, and getting Bitcoin down, that's actually much more flexible, right. As time progresses, you can push an update, you can add more kinds of things, you can see ahead of the curve. And you can add other kinds of things the machine can sell on plus it doesn't have the risk of a hardware installation, right? Now, with that said, machine, minimum wage is not a bad thing. It's like a default thing where you can always get a stream of it, right. So maybe look at it is our software, it's much easier to like, you can see this, for example, coming up in Linux distributions, you can see this coming up in phone distributions, and so on. So stay tuned for stuff like that. But the software is very easy to get installed in places. And then we think of that as something which, over time builds the demand for large scale hardware installations. Right. So that's the thesis right now we'll see what happens.

Unknown Speaker  43:17  
Great presentation.

Unknown Speaker  43:19  
Congress asked the question, I'm echoing a bit. And I'm just asked question on something that's driving me a little bit crazy at the moment, which is, how much are Bitcoin aetherium competitors and how much I complimentary. And suddenly, to me, it seems like whichever one is easiest to build conditional payments is going to win in an IoT space. I just like to hear your thoughts on that.

Unknown Speaker  43:43  
Yeah, excellent question. So um, so basically, question was Bitcoin versus aetherium? To what extent is it a versus To what extent is an end and so on? Right. Okay. So let me give a long answer here. Is there any other time? So first is I'm I'm pro Ethereum in the sense that, you know, I respect batalik. And I think that what they've done is cool. And I think I think we should watch it and play around with it. And I do play around with it, and will probably support it within 21 at some point. Okay, so be one of the micro payment methods, right. Um, with that said, you know, how do I kind of see the respective roles shaping up? So at a minimum, the, the big thing about aetherium if you just take only one attribute of it 17 second, confirmation times and acumen to chain scaling on chain are really good, right? So that's like a 40 x speed up versus a 10 minute average time. And, you know, he said that, you know, he'll boost the block size if they get a lot of on chain traffic. Right. So those are good things. Um, with that said, Here is kind of three things that I think about aetherium that are potential downsides, right. The first is, it has just a much broader attack surface. So there's just lots of things you can do to mess up the Ethereum blockchain where I think as it starts to get, you know, closer to the bitcoins In blockchain, it was it was close, it was like 1 billion to 6 billion. And now, Bitcoin is kind of pulled away with, you know, its own boost. And so we'll see what happens, right? But Ethereum was close as a percentage. And if it ever did become really close, I think you'd see like a level of internet troller, e and d dossing. That you've never seen before, right? Like all these crazy guys, folks, there just be this massive level of attack on aetherium. Right. Now, I'm not saying that's a good thing. I am saying though, that aetherium has a larger attack surface and Bitcoin has been more stressed. And that's like a conservative argument, but it's definitely something to keep in mind. Um, the second is kind of more subtle, which is, I'm not sure whether a theorem can actually manage the transition to proof of stake. I call that a major open technical question, right. And for those of you who don't know, the distinction here, so like proof of work, is how mining works, you know, where, you know, guys compete, and they hash and they extend the blockchain that way, right. Proof of stake is something where effectively you have like a shareholder vote, where everybody votes effectively in proportion to theory, and they have, and that determines what where the next block is approved, right? The problem with this is, with proof of work, you have like a fundamental like measure of how much computation wins the length of a chain, whereas a proof of stake, you only know how many votes were taken. And so you can imagine a situation where people do something in a tackle grinding, where you have a Hydra like thing with lots of competing aetherium block chains, and you have to figure out which of them is actually the canonical one to follow, then you have to introduce trust into the system, as opposed to the simple heuristic of just picking the longest chain with the most proof of work. Right. So that is a fundamental difference between proof of work and proof of stake, which is an open technical question. vitalik says, he's got an answer for this. And he's a smart guy. So you know, like, you know, I have an open mind on this, right.

Unknown Speaker  46:46  
But it's an unsolved problem in my mind, right? And the third question is kind of gets the most fundamental aspect, which is sort of the wise, right. And, you know, I tweeted this, you know, a few days ago, and I didn't mean it as like a diss or anything like that. But, you know, one thing I think a lot about is it took Satoshi level game theory, to figure out how to do a decentralized wire transfer. Okay, like, that's what Bitcoin is a decentralized wire transfer. Now, you don't even think about like a wire transfer is normally involving lots of actors and whatnot, but it does, right, because you know, the banking system is what you had to abstract and turn into this game theory around miners and all these different attacks, selfish mining, and blah, blah, blah, just just seven years of that crap that we basically managed to plow through and get to work. Right. Okay, so if it took that to get a decentralized wire transfer, how much more challenging? Is it to decentralized corporate charter? Okay, now, you know, I've set up a lot of corporate charters, we have, you know, we have looked at lots of different ones. And I'll tell you that like, you know, for example, interesting hearts, you know, charter. All we know all our LPs, right, they are pretty conservative institutions, like pension funds, and stuff like that. They all know each other, we all like eat food together, or whatever. Okay, still, our charter runs to thousands of pages, anticipating all kinds of weird edge cases and stuff, right? Okay. And that's when you're talking about like humans, who are somewhat bound reputational Lee, by the fact that they're all LPs in the same fund, or they're all investors in the same company, or what happened right? Now you replace all those humans, or institutions, which are even more conservative with the robots, right, that don't know each other. Okay, that can launch automated attacks against a charter that have no reputational constraints among each other, and can do weird kinds of things. I mean, like, I wouldn't even know what we would do if say, like, you know, Brown University said, Hey, you know, a16z, we've got 150 Brown startups, you need to keep seeing another one each day and voting on it, to see whether to invest our money and Harvard's money in that startup, right. Like, that's like, kind of like the Dow, you know, like if one LP just tried to keep voting to put its own companies effectively in front of you, right? Those are just kinds of attacks, you don't even think about when you're doing like LP charters. Right. And so like, decentralizing corporate law, I think is going to be like at least 10 or 20 years, it's going to be something where it might be like, Ai, I saw good tweet on this, actually. And it was kind of like, when we first developed computers, people thought, Oh, yeah, walking robots are just like, right around the corner, you know, but the hard part was the probabilities of autonomous control when you start doing game theory, or not like to people, but like, 2000 people in a company. That's like, an unsolved problem. And I think you're gonna see already starting to see that with the Dow. And that's not all of Ethereum, obviously, but it gets to a really core thing about a theorem, which is that the program's their difficulty, may not be in the implementation, but they may be in the game theory, and the human dynamics around them. So I think it'll take a lot of iteration for a theorem to become useful, beyond simply the fact that it's got 17 second block times and on chain scaling. Okay, so that's a long answer, but maybe, maybe it's interesting. So just a

Unknown Speaker  49:47  
quick follow

Unknown Speaker  49:48  
up on conditional payments, I mean, that's, that's where I see where a theorem in Bitcoin if anyone succeeds, where theorem and Bitcoin are going to be fighting in the conditional payment, space.

Unknown Speaker  50:00  
Can you elaborate what you mean by conditional payments?

Unknown Speaker  50:02  
So this is where so you've got machine to machine payments. This is where you write a contract such that funds are released in future dependent on a future event, right? And so that's really easy to do on a theorem and much tougher on Bitcoin. So I mean, it's a very big assumption, but just just to assume that aetherium does succeed on its many challenges. On that conditional payment space, do you think Bitcoin can replicate what you can do on a theorem?

Unknown Speaker  50:28  
Yes, because and let you know, this is our thesis. Let's see if it's true. I think actually, the answer for the next few years is centralized everything other than Bitcoin itself. And here's why I say that. I'm given that example of conditional payments, Union Oracle, right? You need some external party, what is the weather at this time to pay off this bat? Right? What is the score of the Warriors game to pay off this bat? Right? And there has to be trust in the system, right? So like Bitcoin, after enormous effort, we got to this point that the thing functions, right, like Despite all these attacks on functions, and simply taking Bitcoin and baking micro payments into the top 500 web apps is like a 10 year task, which will cause hundreds of like, billion dollar companies, right? I mean, the way the way I sort of think about it is, um, you can take Bitcoin and you can go in a few different directions with it. Right? One Direction is you do more science. Okay. That's the theory. Right? aetherium has legitimately innovated on the science of distributed state. Right? What I mean by that is, Bitcoin is distributed state, because you're doing a minus here for this guy's balance and a plus here for this guy's and you're propagating that out to a lot of nodes, right. So that's distributed, seeing the simplest way of payment is a minus here and a plus there, you replicate it, right? Ethereum lets you do much more sophisticated things, not just a minus and a plus. But like, all kinds of complicated stuff, right? It's improved on the science, however, to every update of that thing. You know, it's it's fast relative to Bitcoin, but it is, it's 40 seconds, or it's 17 seconds, it's a cost money every time you're updating that database, right? So outside of payments, you have to have a really good reason to do something in distributed state in order to push something in distributes it, right. So that's kind of number one, the alternate direction that we're taking is not to improve on the science, but on the engineering, right, say, look, Bitcoin works. Let's make it a first class citizen in a Linux environment. Okay, let's make it work with Linux and HTTP and Python, right? Let's make it work with you know, rails, and let's make it work with every major web framework. And let's make it installed and every Linux distribution. And let's make it something where you just don't even have to think about it, it's just part of the background as a programming tool, right. And so now you don't, you know, when you do payment required over here, like we've actually abstracted out so much for you. So that you can just get started with micro payments, right. And so all the other stuff is stuff people already know about. And they already know how to use and they don't need to learn new concepts. They just say, hey, what if I could price things dynamically? What can I do with that? There's a lot you can do that. And that's the star thesis. Right? And we'll, we'll see which one is right.

Unknown Speaker  53:00  
So, how do you envision 21 getting out there in the hands of the masses, because obviously, a lot of the success of some of the ideas depend on massive amount of 21 nodes. So that's one question that the second is a lot of the ideas that you talked about really are sort of pointing towards, you know, they're really going to support a decentralized web. I mean, we had our first decentralized web summit last week. So do you have that in the in the roadmap, anyone somehow supporting a decentralized web?

Unknown Speaker  53:28  
Yeah, so, um, basically, within about a month and a half, I think, maybe maximum two months, we're gonna launch something which I think all of you guys will actually find very useful on. And I'll dangle it like that. But basically, all the tools, stuff that we have built is all leading up to something. And so you know, we've got all your emails, so you know, we'll ping you. So that's the first answer is we have a plan for how to basically equip you guys with call it freebitcoin. But you're doing something for it, but you won't find what you're doing very onerous. And that will be I think, the channel for writing a lot of these programs. Now, over time, how do you get to decentralized weapons? That's enormous undertaking that takes a long time. And it's going to take more than US swipe part of why we open sources. But I do think that there's things that pull us in that direction. And one of the things that pulls us in direction is, you know, is this like, like the phone, right? Because you know, these are getting more and more powerful. And you're going to have more and more data stored locally, right? In which case, you'd sort of invert the typical, you know, social network application, rather than having a centralized data store. You'd have a cache, and then you make requests to people for the latest version of their information, right. So rather than LinkedIn and Facebook and so on all having a copy of your name, they would make an authenticated request to you to pull that information. I think that is a very long term as to where we're going. at ACC we've got a thesis on this, we call it like the billion phones is the next data center. But we need to fill it for at the monetization step. And we're, hopefully a small piece of that.

Unknown Speaker  55:06  
Thanks as always, sorry. Thanks, as always for wonderful presentation. My question actually dovetails a bit more, we were speaking earlier about big, sluggish corporate folks. And you were at consensus, what what is your impression of their approach to this entire suite of technology? And how speak people, especially in the sort of financial world, are looking at this stuff? Because, I mean, it seems like from my perspective, there's a pretty huge gap.

Unknown Speaker  55:37  
Yeah. Good question. So, um, so like private blockchain, right? So again, sort of like a theorem, I'm pro private blockchain in the following sense. I'm very happy that lots of banks are thinking about this stuff, right? I'm happy that they're actually going to be employing a lot of people with Bitcoin expertise. That's actually very important there. I mean, it's a whole new large quantity of money that's come in, which is basically hiring anybody who has any like Bitcoin programming expertise on the resume. So all kinds of Bitcoin startups and so on are getting folded into these these large banks. And you know, what, like, acquisitions and acquisition are paydays of payday, so that's good, right. Um, and finally, I'm glad that, you know, you're getting guys who are from like the Bitcoin ecosystem going and giving presentations like, you know, for example, you know, my friend Adam Ludwin, a chain was recently at the Federal Reserve, and talking to like 90 central bankers about you know, Bitcoin and blockchain, right. Like, that's awesome. You know, so all that stuff is to the good, right. Okay. So, um, Now, given the gap and stuff that you're talking about, there's actually a pretty good PDF that came out from, I think it was like, either Bank of America Merrill recently on like, it was like a 3040 page thing that basically said, you know, what, I think I tweeted this in like March, which is that probably blockchain aetherium or sort of at the top of the Gartner hype cycle, and like March, and Bitcoin is kind of at the bottom. And now it's kind of going like this, where they're going into their trials. And then I think Bitcoin is coming up, right? And the reason for so we already talked about aetherium, like the dowel and stuff, I think there's going to be all types of shit associated with that. But the private blockchain, I think the issues are going to be more organizational, right? When you're talking about sales, right, and actually getting an organization to install something and run it. And as you can see, we have this saying, which is that getting an enterprise sale is like getting a bill through Congress, right? Because it's not just about the merits of it. It's about the politics of it, and you have to get the CIO to sign off and he doesn't like the CEOs cut of his jib and the sky, you know, like, whatever you there's all this internal politics within the company. Right. So that's like getting a bill through Congress. Well, a blockchain sale a private blockchain sale is to a consortium, right? Because you've got a bunch of different economic actors, they're all updating this blockchain, at least as the most common application of it. And in that case, oh, well, now you're not talking about selling one actor on a database, you're talking about selling enactors on a shared database, which is more like not not a not a tree, not a bill through Congress, but like an international treaty, right? You got to get all these guys who are at war with each other to agree on this. Pirate blockchain is the way they're going to be doing things right. And that's hard on. It's also hard is to make money while doing that. Because, you know, that's like, the guy in the center doesn't have leverage. It's so called a oligarchs in the environment, right? monopsony is monopoly buyer like the you know, US dominant defense is a monopoly buyer of F 16. Right, or Lark close to in this case, you'd have Oleg ops neighbor, the consortium are the only buyers effectively of this blockchain product seven norms pricing leverage with the guy, right. So with that said, I think that the best opportunities for private blockchain are going to be kind of the things that you know, again, my friends, like chain are doing so like with NASDAQ right now, it's like already has a whole platform set up and if they just swap in blockchain there, maybe there's something they can do with like opening up the NASDAQ API, for example, right. So stuff like that, I think is gonna be the first applications of this, but it's going to be much harder than then people have thought. Yep.

Unknown Speaker  59:13  
Get that guy. Somebody doesn't answer question every well.

Unknown Speaker  59:19  
Coming back to what you said about a single buyer of a blockchain like NASDAQ. Why does he need distributed? If he is a single buyer?

Unknown Speaker  59:28  
Well, because there's a lot of guys who use the NASDAQ who. So Alright, so I'll give two answers to that, right? The first answer is, if nothing else, just like if nothing else, Ethereum is 17 second block times, if nothing else, private blockchain is an excuse for doing long overdue enterprise IT and banks, right. So like 40 years of cruft and COBOL, stuff gets thrown out and they have new like rails and you know, Django and node apps, right. And that alone is like a win, right. So that Like part one of the answer there is, Well guess what, they now have a CEO level imperative to go and rip out these old systems and replace them the new stuff, and that alone will give them a huge part of the benefit, right? That's the first answer on the second answer. So just like the hype of the blockchain word allows them to just bunk or bust this, this legacy code out of there, right. The second part of the answer is, I think that they're there. They're interesting cases where, you know, the rights to the blockchain may be centralized. But it might be more replicated in the normal. So for example, NASDAQ may make it possible to download a database of all their trades, right. And so even though NASDAQ is a trusted party that updates it, nevertheless, it's like a more transparent thing, where you can actually just download a multi massive gig file, that is the history of every trade ever made, and all the shares and how they are going through, right, it would actually be a really useful data structure, because I don't think they track Chain of Custody quite like that. Right? So I think there's applications for it that are not just pure decentralized, but some hybrids like that.

Unknown Speaker  1:01:02  
So I still write only for 21. But I Are you concerned in the longer term about the block size debate, and making various business models around micro payments just not viable? If there is a core dev team who are intent on pushing up transaction fees?

Unknown Speaker  1:01:19  
Right, so we've been, you know, studiously Switzerland on that, you know, and in public? So, I guess my, my quick answer on that is, we have kind of a defense in depth or a kind of multiple, you know, fold approach. So the first is something I mentioned, but that will have a blog post out on, which is if you open a micropayment channel to 21 then you can buy from anybody else who's connected 21 right. So it's like a hub and spoke model that facilitates it right. And that becomes more useful obviously, the more nodes are collected, but it's at least one way to work around right. The second is if push comes to shove, we can always implement a theorem support as the second you know, safety valve. And the third is I do hear rumblings that you know, like maybe that two MB you know, hard fork will go through at some point right? With that said, you know, we'll we'll see what happens and you know, we will we will continue to do our thing, you know, regardless. Let me take a break, get some food and then do a fireside chat. So good. Thanks.

Transcribed by https://otter.ai
